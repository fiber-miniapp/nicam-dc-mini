#
# ------ FOR Linux 64bit & intel fortran&C & intel mpi -----
#

##### for computation

FFLAGS_FAST = -fpp3 -O3 -xHost -ip                 \
              -assume byterecl -convert big_endian \
              -ftz -fp-model precise -pc 80        \
              -shared-intel        \
              -heap-arrays -fno-alias

FFLAGS_DEBUG = -fpp3 -O0 -m64                       \
               -assume byterecl -convert big_endian \
               -fp-model precise -pc 80             \
               -check all -warn all -g -traceback   \
               -shared-intel        \
               -heap-arrays -fno-alias

FFLAGS_SOSO = -fpp3 -g -O1 -fno-inline-functions -no-ip -ip-no-inlining \
              -debug inline-debug-info  \
              -assume byterecl -convert big_endian \
              -ftz -fp-model precise -pc 80        \
              -shared-intel        \
              -heap-arrays -fno-alias

FC     = mpiifort
FFLAGS = $(FFLAGS_FAST)
#FFLAGS = $(FFLAGS_DEBUG)
#FFLAGS = $(FFLAGS_SOSO)	# somewhat good one for vtune analysis

ifneq ($(ENABLE_OPENMP),)
      FFLAGS += -openmp -openmp-report
endif
ifneq ($(ENABLE_PAPI),)
      FFLAGS += -D_PAPI_
      PAPI_INCLUDE = -I$(PAPI)/include
      PAPI_LIBS    = -L$(PAPI)/lib -lpapi
endif

MODDIROPT ?= -module

CC     = mpiicc
CFLAGS = -O3 -xHost -ip -ftz -shared-intel

LD     = $(FC)
LFLAGS = $(FFLAGS)

##### for frontend
INSTALL = install
AR      = ar
ARFLAGS = r
RANLIB  = ranlib
JOBSUB  = sh
